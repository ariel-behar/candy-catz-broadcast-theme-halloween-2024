{% if customer %}
  {% if customer.email == "unufri@gmail.com" %}
    <p>Permissions granted!</p>
    
    <p>Update SEO for Collections</p>


    <div id="new-collection">
    <h3>Create New SEO data for Collection</h3>
    
    <!-- Формата за добавяне на нов запис -->
    <fieldset style="border: 1px solid #ccc; padding: 10px; margin-bottom: 10px;">
        <legend>Entry</legend>
        <label>URL: <input type="text" id="url" class="meta-input" placeholder="Enter URL"></label><br>
        <label>H1: <input type="text" id="h1" class="meta-input" placeholder="Enter H1"></label><br>
        <label>Meta Title: <input type="text" id="meta_title" class="meta-input" placeholder="Enter Meta Title"></label><br>
        <label>Meta Description: <input type="text" id="meta_description" class="meta-input" placeholder="Enter Meta Description"></label>
    </fieldset>
<br />
     
    <!-- Бутон за добавяне на нов запис -->
    <button type="button" id="add-entry">Add Entry</button><br /><br />

    <!-- Показване на генерирания JSON в textarea -->
    <textarea id="json-output" rows="6" cols="60" placeholder="Generated JSON will appear here..."></textarea>
    
    <!-- Бутон за копиране на JSON --><br />
    <button type="button" id="copy-json">Copy Data</button>
</div>


    
    {%- for collection in collections -%}
      {% assign meta_value = collection.metafields.custom.info %}
      {% if meta_value != blank %}
       
        {% assign json_string = collection.metafields.custom.info | json %}
{% assign json_string = json_string | remove_first: '[' | remove_last: ']' %}
{% assign json_items = json_string | split: '},' %}

        <h3>{{ collection.title }}</h3>

        
          <div id="collection-{{ collection.id }}">


           
            
          </div>

         
        
          <!-- Текстово поле за копиране на обновения JSON -->
          <label>Updated JSON:</label><br>
        
<br />
          <textarea id="json-output-{{ collection.id }}" rows="6" cols="60">{{ meta_value }}</textarea><br>
          
          <button type="button" id="copy-{{ collection.id }}">Copy Data</button>
        

      {% endif %}
    {%- endfor -%}

    <script>

     document.addEventListener("DOMContentLoaded", function () {

       document.querySelectorAll('.add-entry').forEach(button => {
        button.addEventListener('click', function () {
            const collectionId = button.getAttribute('data-collection-id'); // ID на колекцията
            const entriesContainer = document.querySelector(`#collection-${collectionId} .entries-container`);

            // Създаваме новите input полета за новия запис
            const newEntryFields = document.createElement('fieldset');
            newEntryFields.style.border = '1px solid #ccc';
            newEntryFields.style.padding = '10px';
            newEntryFields.style.marginBottom = '10px';

            const legend = document.createElement('legend');
            legend.textContent = `Entry ${entriesContainer.children.length + 1}`;
            newEntryFields.appendChild(legend);

            // Генерираме input полета за новия запис
            const fields = ['url', 'h1', 'meta_title', 'meta_description'];
            fields.forEach(field => {
                const label = document.createElement('label');
                label.textContent = `${field.charAt(0).toUpperCase() + field.slice(1)}: `;

                const input = document.createElement('input');
                input.type = 'text';
                input.classList.add('meta-input');
                input.setAttribute('data-key', field);
                input.value = ''; // Празно по подразбиране
                newEntryFields.appendChild(label);
                newEntryFields.appendChild(input);
                newEntryFields.appendChild(document.createElement('br'));
            });

            // Добавяме новите input полета към контейнера за записи
            entriesContainer.appendChild(newEntryFields);
        });
    });


      
    // Събитие за копиране на JSON в клипборда
    copyJsonButton.addEventListener('click', function () {
        // Избираме съдържанието на textarea
        jsonOutputTextarea.select();
        jsonOutputTextarea.setSelectionRange(0, 99999); // За мобилни устройства

        // Копираме съдържанието в клипборда
        try {
            // Използваме новия Clipboard API за да копираме текста
            navigator.clipboard.writeText(jsonOutputTextarea.value).then(() => {
                alert('JSON copied to clipboard!');
            }).catch(err => {
                console.error('Error copying text: ', err);
                alert('Failed to copy data');
            });
        } catch (err) {
            console.error('Error copying text: ', err);
        }
    });
       
    // Намираме всички textarea елементи, които съдържат JSON
    document.querySelectorAll("textarea[id^='json-output-']").forEach(textarea => {
        const collectionId = textarea.id.replace("json-output-", ""); // Извличаме ID на колекцията
        
        // Опитваме се да парснем JSON-а от textarea
        let jsonData;
        try {
            jsonData = JSON.parse(textarea.value);
        } catch (e) {
            console.error(`Invalid JSON for collection ${collectionId}:`, e);
            return; // Прекратяваме изпълнението за тази колекция
        }

        // Намираме контейнера на колекцията (div с id collection-{{ collection.id }})
        const collectionContainer = document.getElementById(`collection-${collectionId}`);
        
        // Намираме контейнера, в който ще добавяме input полетата
        const inputContainer = document.createElement('div');
        inputContainer.classList.add("input-container");

        // Генерираме input полета за всеки запис в JSON масива
        jsonData.forEach((item, index) => {
            const fieldset = document.createElement('fieldset');
            fieldset.style.border = '1px solid #ccc';
            fieldset.style.padding = '10px';
            fieldset.style.marginBottom = '10px';
            
            const legend = document.createElement('legend');
            legend.textContent = `Entry ${index + 1}`;
            fieldset.appendChild(legend);

            // Генерираме input полета за всяко поле
            Object.keys(item).forEach(key => {
                const label = document.createElement('label');
                label.textContent = `${key.charAt(0).toUpperCase() + key.slice(1)}: `;
                
                const input = document.createElement('input');
                input.type = 'text';
                input.classList.add('meta-input');
                input.setAttribute('data-key', key);
                input.value = item[key];
                input.addEventListener('input', () => updateTextarea(collectionId));  // Актуализираме само текущия textarea

                label.appendChild(input);
                fieldset.appendChild(label);
                fieldset.appendChild(document.createElement('br'));
            });

            inputContainer.appendChild(fieldset);
        });

        // Вмъкваме inputContainer в контейнера на колекцията (преди самия textarea)
        collectionContainer.appendChild(inputContainer);

        // Функция за актуализиране на JSON в textarea при промяна на input полета
        function updateTextarea(collectionId) {
            const textarea = document.getElementById(`json-output-${collectionId}`); // Намираме съответния textarea

            // Прочитаме стойностите от input полетата само в рамките на контейнера за тази колекция
            const updatedData = [];

            collectionContainer.querySelectorAll('.input-container fieldset').forEach((fieldset) => {
                const item = {};
                fieldset.querySelectorAll(".meta-input").forEach(input => {
                  
                    const key = input.getAttribute('data-key');
                    item[key] = input.value;
                
                });
                updatedData.push(item);
            });

            // Актуализираме стойността на textarea
            textarea.value = JSON.stringify(updatedData, null, 2);
        }

      const copyButton = document.getElementById(`copy-${collectionId}`);
        if (copyButton) {
            copyButton.addEventListener("click", function () {
                const textarea = document.getElementById(`json-output-${collectionId}`);
                if (textarea) {
                    // Избираме съдържанието на textarea
                    textarea.select();
                    textarea.setSelectionRange(0, 99999); // За мобилни устройства

                    // Копираме съдържанието в клипборда
                    try {
                        document.execCommand('copy');
                        alert('Data copied to clipboard!');
                    } catch (err) {
                        console.error('Unable to copy text', err);
                    }
                }
            });
        }
      
    });
});

      
      function updateJson(collectionId) {
        let updatedData = [];
        let container = document.getElementById("collection-" + collectionId);
        let inputs = container.querySelectorAll(".meta-input");

        // Групиране на input стойностите в JSON
        let items = [];
        let fields = ["url", "h1", "meta_title", "meta_description"];
        inputs.forEach((input, index) => {
          let field = input.getAttribute("data-key");
          let itemIndex = Math.floor(index / fields.length); // Намерете кой запис се обработва

          if (!items[itemIndex]) {
            items[itemIndex] = {};
          }

          items[itemIndex][field] = input.value;
        });

        // Поставяне на актуализирания JSON в textarea
        document.getElementById("json-output-" + collectionId).value = JSON.stringify(items, null, 2);
      }
    </script>

  {% else %}
    <p>Permissions denied.</p>
  {% endif %}
{% else %}
  <p>Permissions denied.</p>
{% endif %}